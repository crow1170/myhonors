{
  "rules": {
		// set defaults to no reads and no writes unless you're an Administrator
		".read": "auth.isAdmin === true",
		".write": "auth.isAdmin === true",
		
		"user_profiles": {
			".read": true,
			"$userId": {
				".read": "auth.id == $userId",
				// we need to temporarily allow Arch mods to edit users since we don't have a full list of faculty,
				// staff, and students in the system yet. Once we have that data in place, we can move the isArchMod
				// half of this .write rule down into the archProjects child
				".write": "auth.id == $userId || auth.isArchMod === true",
				//".validate": "newData.hasChildren(['fname', 'lname'])", // we can add this back after we settle the above situation with Arch

				// validate specific entries
				"fname": {
					".validate": "newData.isString()"
				},
				"lname": {
					".validate": "newData.isString()"
				},
				"pid": {
					// Panther ID is intentionally stored as a string instead of a number. Think of it like a
					// username, we're never going to perform any numerical additions or subtractions with it
					".validate": "newData.isString()"
				},
				"rsvps": {
					"$eventID": {
						".validate": "newData.isBoolean()"
					}
				},
				"comments": {
					"$commentID": {
						".validate": "newData.isBoolean()"
					}
				},
				"archProjects": {
					"$projectId": {
						".validate": "newData.isBoolean()"
					}
				},

				// prevents any extra children (we only want the fields that are explicitly identified here)
				"$other": {
					".validate": false
				}
			}
		},

		"swipes": {
			".read": true,
			".write": true,
		},

		"events": {
			".read": true,
			".write": true
		},
		
		"careers": {
			".read": true,
			".write": true
		},

		"comments": {
			"$commentID": {
				".read": true,
				".write": "auth.id == newData.child('authorId').val()", // ensure author of comment is current user
				".validate": "newData.hasChildren(['authorId', 'date', 'content'])",

				// validate specific properties
				"authorId": {
					".validate": "newData.isString()",
				},
				"date": {
					".validate": "newData.isNumber()"
				},
				"content": {
					".validate": "newData.isString()"
				},

				// prevents any extra children (we only want the fields that are explicitly identified here)
				"$other": {
					".validate": false
				}
			}
		},

		"arch": {
			".read": true,
			".write": true
		}
		
	}
}